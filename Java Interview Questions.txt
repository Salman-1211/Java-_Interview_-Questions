1) Static vs Instance Methods - define Static keyword & its various uses in Java in detail.

2) Static vs Instance Methods.Define the differences between static and instance methods, highlighting when to use each.

3) Runnable vs Callable - explain the differences between Runnable and Callable in Java.

4) Runnable vs Callable - write a simple multi-threaded program to print 1-100.

5) Thread Safety - explain thread safety and how can it be ensured in Java applications.

6) HashMap Was the learner able to explain the internal working of HashMap in Java.

7) Comparable vs Comparator - explain the differences between Comparable and Comparator in Java.

8) Comparable vs Comparator: code a comparator which would sort an ArrayList in descending order.

9) Lambdas and Streams. Explain the Stream API in Java and its advantages.

10) Final vs Finally vs Finalise - discuss the role of the finalise method in Java and its relationship with garbage collection.

11) Final vs Finally vs Finalise. Differentiate between use-cases for final, finally, and finalise in Java.

12) StringBuffer and StringBuilder* Was the learner able to differentiate between StringBuffer and StringBuilder in Java.

13) Thread Safety - name some of the collections in java which supports Thread Safety.

14) Abstraction. Define Abstraction in detail and implement the same.

15) Abstraction - do the code implementation of abstract class and interface.

16) List < Product > productsList = new ArrayList < Product > ();
        // Adding Products
        productsList.add(new Product(1, "HP Laptop", 25000 f));
        productsList.add(new Product(2, "Dell Laptop", 30000 f));
        productsList.add(new Product(3, "Lenevo Laptop", 28000 f));
        productsList.add(new Product(4, "Sony Laptop", 28000 f));
        productsList.add(new Product(5, "Apple Laptop", 90000 f));
Find HigestPrice Of Product ? (Infosys)